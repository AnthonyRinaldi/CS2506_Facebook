/*******************************************
  HOW TO RUN THE GRADING SCRIPT
*******************************************/

1. Make a directory by the name auto-grading within the directory where your source code is located. 
	for example, if your source code is located at /home/people/parang/project3/
        then make the auto-grading directory inside project3 directory. 
	So, the location of auto-grading directory is: /home/people/parang/project3/
2. Switch to the auto-grading directory using:
	 cd auto-grading
3. Copy the auto-grading files using:
	cp -r /home/courses/cs2506/fall2012/project3/auto-grading/* .
4. Change the permissions of grading.sh file using:
	chmod 755 grading.sh
5. Make sure that there are test cases listed inside a directory names test_cases. The error test cases are error*.txt and functionality test cases are test*.txt
6. Run the grading script using:
	./grading.sh


/***********************************************************
  MY AND TA'S OUTPUT LOOKS THE SAME BUT STILL IT FAILS
***********************************************************/

1. The grading script will prompt that your output and ta's output are not same, do you want to continue?
2. Say no
3. There will be two files student_out and ta_out which will contain your output and ta's output
4. Use the following command to see what is different:
   diff student_out ta_out

/*****************************************
  WHAT ARE THE DIFFERENT FILES
******************************************/

The grading script contains of following files:

1. grading.sh : The actual grading script
2. social_network_ta : TA's implementaion of the project
3. usage.txt : Used by the TA's implementation
4. test_cases/test*.txt : contains different test cases to test for functionality (60 in total)
5. test_cases/error*.txt : contains different error test cases (40 in total)


/******************************************
  HOW DOES THE GRADING SCRIPT WORKS
******************************************/

1. It first compiles the program in the source directory using:
	gcc *.c -o social_network -Wall -Werror
2. It picks one test file at a time from the directory test_cases
3. It runs the picked test file for both ta's implementation and your implementation
4. It compares the output generated by both.
5. If the outputs match, it gives you points else prints the differences
6. It then performs the same for all the test cases for file mode

/******************************************
  HOW TO DO SELECTIVE GRADING
******************************************/

1. If you want to grade only the interactive functionality, open grading.sh and change FILE=0 on line 5 and INTERACTIVE=1 on line 4
2. If you want to grade only the file functionality, open grading.sh and change INTERACTIVE=0 on line 4 and FILE=1 on line 5
3. If you just want to compiler your program, open grading.sh and change INTERACTIVE=0 on line 4 and FILE=0 on line 5


/******************************************
  TROOUBLE SHOOTING
******************************************/

If for some reason your script is not working, please make sure that ALL of the following are TRUE:

1. The folder auto-grading is inside your source code folder, such that cd .. will take me to source code
2. All the required .c and .h source files are present in the source code folder
3. There are some test files in test_cases folder
4. The grading script is executable. That is doing a ./grading.sh works. If not try chmod 755 grading.sh
5. Make sure that the auto-grading folder contains the TA's implementation and the filename is social_network_ta


/*****************************************
  HELP
*****************************************/

These grading scripts are meant to help you and not to make it difficult for you. 
If for some reasong you are not able to run the grading script or the grading script is not behaving correctly, DONT PANIC.
Just send an email to parang@cs.vt.edu
